{"version":3,"sources":["images/ssbu.jpg","images sync /^/.*$","images/captainfalcon.png","images/diddykong.png","images/duckhunt.png","images/fox.png","images/kirby.png","images/link.png","images/littlemac.png","images/mario.png","images/marth.png","images/megaman.png","images/ness.png","images/pac-man.png","images/pikachu.png","images/rob.png","images/sonic.png","images/villager.png","components/Header/index.js","components/Card/index.js","Engine.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./captainfalcon.png","./diddykong.png","./duckhunt.png","./fox.png","./kirby.png","./link.png","./littlemac.png","./mario.png","./marth.png","./megaman.png","./ness.png","./pac-man.png","./pikachu.png","./rob.png","./sonic.png","./ssbu.jpg","./villager.png","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","Header","react_default","a","createElement","className","this","props","score","src","logo","alt","React","Component","Card","onClick","imageClick","image","replace","require","Engine","state","cardImg","clickedCards","event","currentCard","target","_this","indexOf","setState","sort","b","Math","random","alert","concat","_this2","components_Header","highScore","components_Card","key","Boolean","window","location","hostname","match","ReactDOM","render","src_Engine_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.981ed03b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ssbu.76cae91e.jpg\";","var map = {\n\t\"./captainfalcon.png\": 21,\n\t\"./diddykong.png\": 22,\n\t\"./duckhunt.png\": 23,\n\t\"./fox.png\": 24,\n\t\"./kirby.png\": 25,\n\t\"./link.png\": 26,\n\t\"./littlemac.png\": 27,\n\t\"./mario.png\": 28,\n\t\"./marth.png\": 29,\n\t\"./megaman.png\": 30,\n\t\"./ness.png\": 31,\n\t\"./pac-man.png\": 32,\n\t\"./pikachu.png\": 33,\n\t\"./rob.png\": 34,\n\t\"./sonic.png\": 35,\n\t\"./ssbu.jpg\": 6,\n\t\"./villager.png\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/captainfalcon.10d25c86.png\";","module.exports = __webpack_public_path__ + \"static/media/diddykong.9a647b72.png\";","module.exports = __webpack_public_path__ + \"static/media/duckhunt.6d991227.png\";","module.exports = __webpack_public_path__ + \"static/media/fox.5eb02e70.png\";","module.exports = __webpack_public_path__ + \"static/media/kirby.31f9d4ab.png\";","module.exports = __webpack_public_path__ + \"static/media/link.b50bb272.png\";","module.exports = __webpack_public_path__ + \"static/media/littlemac.c7e151ee.png\";","module.exports = __webpack_public_path__ + \"static/media/mario.17e173d9.png\";","module.exports = __webpack_public_path__ + \"static/media/marth.735d14fe.png\";","module.exports = __webpack_public_path__ + \"static/media/megaman.d23cf3f4.png\";","module.exports = __webpack_public_path__ + \"static/media/ness.62279f2f.png\";","module.exports = __webpack_public_path__ + \"static/media/pac-man.bf80b0fa.png\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.96136601.png\";","module.exports = __webpack_public_path__ + \"static/media/rob.121d710b.png\";","module.exports = __webpack_public_path__ + \"static/media/sonic.482cd4ef.png\";","module.exports = __webpack_public_path__ + \"static/media/villager.0fca74bf.png\";","import React from 'react';\r\nimport './header.css'\r\nimport logo from '../../images/ssbu.jpg'\r\n\r\nclass Header extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id='wrapper'>\r\n          <div className=\"d-flex bd-highlight mb-3\">\r\n            <div className=\"mr-auto p-2 bd-highlight\">SB Memory Click</div>\r\n            <div className=\"p-2 bd-highlight\">Click on a card to start!</div>\r\n            <div className=\"p-2 bd-highlight\">Score:{this.props.score}</div>\r\n          </div>\r\n          <div className=\"text-center\">        \r\n          <img id='logo' src={logo} alt='logo'/>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport './card.css';\r\n\r\n\r\n    const Card = props => (\r\n      <div className='card' onClick={props.imageClick}>\r\n        <div className='img-container'>\r\n            <img alt={props.image.replace(\".png\", \"\")} src={require('../../images/'+props.image)} />\r\n        </div>\r\n      </div>\r\n    );    \r\n\r\nexport default Card;","import React from 'react';\nimport Header from './components/Header';\nimport Card from './components/Card'\nimport cardImg from './images.json'\nimport './Engine.css';\n\nclass Engine extends React.Component {\n  state = {\n    cardImg,\n    clickedCards:[],\n    score:0,\n  }\n\n  imageClick = event => {\n    const currentCard = event.target.alt;\n    const cardsClicked = this.state.clickedCards.indexOf(currentCard) > -1;\n  \n   if(cardsClicked){\n    this.setState({\n      cardImg: this.state.cardImg.sort(function(a,b){\n        return 0.5 - Math.random();\n      }),\n    clickedCards:[],\n    score:0\n    })\n    alert('You lose. Click a card to play again!')\n    } else {\n    this.setState({\n      cardImg: this.state.cardImg.sort(function(a,b){\n        return 0.5 - Math.random()\n      }),\n      clickedCards: this.state.clickedCards.concat(currentCard),\n      score:this.state.score + 1\n    },\n    () => {\n      if(this.state.score === 16) {\n        alert('Congrats you win!')\n        this.setState({\n          cardImg: this.state.cardImg.sort(function(a,b){\n            return 0.5 - Math.random();\n          }),\n        clickedCards: [],\n        score:0\n        })\n      }\n    })\n  }\n}\nrender() {\n  return (\n    <div>\n    <Header\n    score={this.state.score}\n    highScore={this.state.highScore}/>\n    <div className='wrapper'>\n    {this.state.cardImg.map(cardImg => (\n    <Card\n    imageClick={this.imageClick}\n    id={cardImg.id}\n    key={cardImg.id}\n    image={cardImg.image}\n    />))}\n    </div>\n    </div>\n  )\n  }\n}\nexport default Engine;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Engine from './Engine';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Engine />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}